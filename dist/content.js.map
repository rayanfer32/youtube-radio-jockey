{
  "version": 3,
  "sources": ["..\\src\\utils\\api-utils.ts", "..\\src\\utils\\audio-utils.ts", "..\\src\\utils\\dom-utils.ts", "..\\src\\utils\\youtube-utils.ts", "..\\src\\utils\\edge-tts-web.ts", "..\\src\\content.ts"],
  "sourcesContent": [
    "// API-related utility functions\r\n\r\n// Get stored API settings\r\nconst getAPISettings = async () => {\r\n  return await chrome.storage.sync.get();\r\n};\r\n\r\nconst stylePrompts = {\r\n  energetic:\r\n    \"You are a high-energy radio DJ who's absolutely pumped about music!\",\r\n  chill: \"You are a laid-back DJ with a smooth, relaxed vibe.\",\r\n  sarcastic:\r\n    \"You are a witty DJ who adds clever commentary with a touch of sarcasm.\",\r\n  professional: \"You are a professional radio host with polished delivery.\",\r\n};\r\n\r\nconst lengthGuides = {\r\n  short: \"Keep it brief and punchy (20-30 seconds when spoken)\",\r\n  medium: \"Moderate length with good flow (30-45 seconds when spoken)\",\r\n  long: \"More detailed commentary (45-60 seconds when spoken)\",\r\n};\r\n\r\n// Generate RJ prompt based on settings\r\nfunction generateRJPrompt(\r\n  currentSong: string,\r\n  nextSong: string | null,\r\n  style: keyof typeof stylePrompts,\r\n  length: keyof typeof lengthGuides,\r\n  scriptHistory: string | null,\r\n  comments: string | null,\r\n  currentSonglyrics: string | null,\r\n  hostName: string,\r\n  radioStation: string\r\n) {\r\n  const basePrompt = stylePrompts[style] || stylePrompts.energetic;\r\n  const lengthGuide = lengthGuides[length] || lengthGuides.medium;\r\n\r\n  const radioInfo = `Radio station: ${radioStation}\r\n  Host name: ${hostName}`;\r\n\r\n  return `${basePrompt} ${lengthGuide} ${radioInfo}. \r\n\r\n${\r\n  scriptHistory && \"Here's some of your previous commentary: \\n\" + scriptHistory\r\n}\r\n${comments && \"Here are some comments from viewers: \\n\" + comments}\r\n\r\nCurrent song: \"${currentSong}\"\r\n\r\n${currentSonglyrics ? `Current song Lyrics: ${currentSonglyrics}` : \"\"}\r\n\r\n${nextSong ? `Next Song: \"${nextSong}\"` : \"\"}\r\n\r\nImportant guidelines:\r\nAVOID using special characters that are not detected by TTS in the commentary, your output will be used to generate audio.\r\nAVOID saying Alright and Okay okay or similar phrases at the begining. Cook up some new intros\r\nCREATE engaging commentary that connects with listeners. Be natural, enthusiastic, and add personality. Don't read the song titles - make it conversational and fun!\r\nONLY respond with the commentary text, do not include any additional instructions or explanations.\r\n`;\r\n}\r\n\r\n// Call Gemini API with error handling\r\nasync function callGeminiAPI(prompt: string, apiKey: string) {\r\n  if (!apiKey) {\r\n    throw new Error(\"Gemini API key not configured\");\r\n  }\r\n\r\n  const response = await fetch(\r\n    \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent\",\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-goog-api-key\": apiKey,\r\n      },\r\n      body: JSON.stringify({\r\n        contents: [\r\n          {\r\n            parts: [\r\n              {\r\n                text: prompt,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      }),\r\n    }\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\r\n      `Gemini API error: ${response.status} ${response.statusText}`\r\n    );\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  if (!data.candidates || !data.candidates[0] || !data.candidates[0].content) {\r\n    throw new Error(\"Invalid response from Gemini API\");\r\n  }\r\n\r\n  return data.candidates[0].content.parts[0].text;\r\n}\r\n\r\n// Call Murf.ai API with error handling\r\nasync function callMurfAPI(\r\n  text: string,\r\n  apiKey: string,\r\n  voiceId = \"en-US-natalie\",\r\n  style = \"Promo\"\r\n) {\r\n  if (!apiKey) {\r\n    throw new Error(\"Murf.ai API key not configured\");\r\n  }\r\n\r\n  const response = await fetch(\"https://api.murf.ai/v1/speech/generate\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"api-key\": apiKey,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      text: text,\r\n      voiceId: voiceId,\r\n      style: style,\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(\r\n      `Murf.ai API error: ${response.status} ${response.statusText} - ${\r\n        errorData.message || \"Unknown error\"\r\n      }`\r\n    );\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  if (!data.audioFile) {\r\n    throw new Error(\"No audio file returned from Murf.ai API\");\r\n  }\r\n\r\n  // Fetch the actual audio file\r\n  const audioResponse = await fetch(data.audioFile);\r\n  if (!audioResponse.ok) {\r\n    throw new Error(\"Failed to fetch audio file from Murf.ai\");\r\n  }\r\n\r\n  return {\r\n    audioBlob: await audioResponse.blob(),\r\n    duration: data.audioLengthInSeconds,\r\n    remainingChars: data.remainingCharacterCount,\r\n  };\r\n}\r\n\r\n// Log commentary for export feature\r\nfunction logCommentary(currentSong: string, nextSong: string, script: string) {\r\n  chrome.runtime\r\n    .sendMessage({\r\n      action: \"logCommentary\",\r\n      currentSong,\r\n      nextSong,\r\n      script,\r\n    })\r\n    .catch(console.error);\r\n}\r\n\r\nasync function callLyricsAPI(query: string) {\r\n  const response = await fetch(`https://lrclib.net/api/search?q=${query}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    referrer: \"https://lrclib.net/docs\",\r\n    method: \"GET\",\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(\r\n      `Lyrics API error: ${response.status} ${response.statusText}`\r\n    );\r\n  }\r\n\r\n  const data = await response.json();\r\n  console.log(\"Lyrics API response:\", data);\r\n  return data?.[0]?.plainLyrics; // array of lyrics objects , data[0].plainLyrics\r\n\r\n  // await callLyricsAPI(\"Hoang - Run Back to You\");\r\n}\r\n\r\nconst APIUtils = {\r\n  callMurfAPI,\r\n  callGeminiAPI,\r\n  callLyricsAPI,\r\n  logCommentary,\r\n  getAPISettings,\r\n  generateRJPrompt,\r\n};\r\n\r\n// Make it globally available\r\n(window as any).APIUtils = APIUtils;\r\nexport default APIUtils;\r\n",
    "// Extend Window interface to include webkitAudioContext\r\ndeclare global {\r\n  interface Window {\r\n    webkitAudioContext: typeof AudioContext;\r\n  }\r\n}\r\n\r\n// Audio-related utility functions\r\nconst AudioUtils = {\r\n  // Create audio context with fallbacks\r\n  createAudioContext() {\r\n    try {\r\n      return new (window.AudioContext || window.webkitAudioContext )();\r\n    } catch (error) {\r\n      console.error(\"Audio context creation failed:\", error);\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // Smooth volume transition\r\n  async smoothVolumeTransition(\r\n    video: HTMLVideoElement,\r\n    targetVolume: number,\r\n    duration = 200\r\n  ) {\r\n    if (!video) return;\r\n\r\n    const startVolume = video.volume;\r\n    const steps = 20;\r\n    const volumeStep = (targetVolume - startVolume) / steps;\r\n    const timeStep = duration / steps;\r\n\r\n    for (let i = 0; i < steps; i++) {\r\n      setTimeout(() => {\r\n        const newVolume = Math.max(\r\n          0,\r\n          Math.min(1, startVolume + volumeStep * (i + 1))\r\n        );\r\n        video.volume = newVolume;\r\n      }, timeStep * i);\r\n    }\r\n  },\r\n\r\n  // Duck volume smoothly\r\n  async duckVolume(video: HTMLVideoElement, duckLevel = 0.3) {\r\n    if (!video) return 1;\r\n\r\n    const originalVolume = video.volume;\r\n    await this.smoothVolumeTransition(video, duckLevel);\r\n    return originalVolume;\r\n  },\r\n\r\n  // Restore volume smoothly\r\n  async restoreVolume(video: HTMLVideoElement, targetVolume: number) {\r\n    if (!video || targetVolume === undefined) return;\r\n    await this.smoothVolumeTransition(video, targetVolume, 300);\r\n  },\r\n\r\n  // Create audio element with error handling\r\n  createAudio(audioBlob: Blob) {\r\n    const audioUrl = URL.createObjectURL(audioBlob);\r\n    const audio = new Audio(audioUrl);\r\n\r\n    // Add error handling\r\n    audio.addEventListener(\"error\", (error) => {\r\n      console.error(\"Audio playback error:\", error);\r\n      URL.revokeObjectURL(audioUrl);\r\n    });\r\n\r\n    return { audio, audioUrl };\r\n  },\r\n\r\n  // Play audio with promise\r\n  playAudio(audio: HTMLAudioElement) {\r\n    return new Promise((resolve, reject) => {\r\n      audio.addEventListener(\"ended\", resolve);\r\n      audio.addEventListener(\"error\", reject);\r\n\r\n      audio.play().catch(reject);\r\n    });\r\n  },\r\n};\r\n\r\n// Make it globally available\r\n(window as any).AudioUtils = AudioUtils;\r\nexport default AudioUtils;\r\n",
    "const showLoadingIndicator = () => {\r\n  if (document.getElementById(\"rj-loading\")) return;\r\n\r\n  const loading = document.createElement(\"div\");\r\n  loading.id = \"rj-loading\";\r\n  loading.innerHTML = `\r\n      <div style=\"display: flex; align-items: center; gap: 10px;\">\r\n        <div class=\"spinner\"></div>\r\n        <span>üéôÔ∏è Preparing RJ commentary...</span>\r\n      </div>\r\n    `;\r\n\r\n  loading.style.cssText = `\r\n      position: fixed;\r\n      top: 140px;\r\n      right: 20px;\r\n      z-index: 9999;\r\n      background: rgba(0, 0, 0, 0.8);\r\n      color: white;\r\n      padding: 10px 15px;\r\n      border-radius: 8px;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n      font-size: 14px;\r\n    `;\r\n\r\n  // Add spinner CSS if not exists\r\n  if (!document.getElementById(\"spinner-styles\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"spinner-styles\";\r\n    style.textContent = `\r\n        .spinner {\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid #333;\r\n          border-top: 2px solid #fff;\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n        }\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n      `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  document.body.appendChild(loading);\r\n};\r\n\r\nconst hideLoadingIndicator = () => {\r\n  const loading = document.getElementById(\"rj-loading\");\r\n  if (loading) loading.remove();\r\n};\r\n\r\nconst showErrorMessage = (message: string) => {\r\n  const error = document.createElement(\"div\");\r\n  error.style.cssText = `\r\n      position: fixed;\r\n      top: 140px;\r\n      right: 20px;\r\n      z-index: 9999;\r\n      background: #ff4757;\r\n      color: white;\r\n      padding: 10px 15px;\r\n      border-radius: 8px;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n      font-size: 14px;\r\n      max-width: 350px;\r\n    `;\r\n  error.textContent = `‚ùå ${message}`;\r\n\r\n  document.body.appendChild(error);\r\n\r\n  setTimeout(() => {\r\n    error.remove();\r\n  }, 5000);\r\n};\r\n\r\nconst createRJModeButton = (toggleRJMode: Function) => {\r\n  const button = document.createElement(\"button\");\r\n  button.id = \"rj-mode-button\";\r\n  button.innerHTML = \"üéôÔ∏è Start RJ Mode\";\r\n  button.style.cssText = `\r\n      position: fixed;\r\n      top: 100px;\r\n      right: 20px;\r\n      z-index: 9999;\r\n      background: linear-gradient(45deg, #ff6b6b, #4ecdc4);\r\n      color: white;\r\n      border: none;\r\n      padding: 12px 20px;\r\n      border-radius: 25px;\r\n      cursor: pointer;\r\n      font-weight: bold;\r\n      box-shadow: 0 4px 15px rgba(0,0,0,0.2);\r\n      transition: transform 0.2s ease;\r\n    `;\r\n\r\n  button.addEventListener(\"click\", () => toggleRJMode());\r\n  button.addEventListener(\"mouseover\", () => {\r\n    button.style.transform = \"scale(1.05)\";\r\n  });\r\n  button.addEventListener(\"mouseout\", () => {\r\n    button.style.transform = \"scale(1)\";\r\n  });\r\n\r\n  document.body.appendChild(button);\r\n};\r\n\r\nconst dismissNotification = () => {\r\n  const notification = document.getElementById(\"rj-mode-notification\");\r\n  if (notification) {\r\n    notification.style.animation = \"slideOutRight 0.3s ease-in\";\r\n    setTimeout(() => {\r\n      notification.remove();\r\n    }, 300);\r\n  }\r\n};\r\n\r\nconst showRJModePrompt = (toggleRJMode: Function) => {\r\n  // Create a more prominent notification for playlist detection\r\n  const notification = document.createElement(\"div\");\r\n  notification.id = \"rj-mode-notification\";\r\n  notification.innerHTML = `\r\n      <div style=\"display: flex; align-items: center; gap: 10px;\">\r\n        <span>üéôÔ∏è</span>\r\n        <div>\r\n          <strong>Playlist Detected!</strong>\r\n          <br>\r\n          <small>Ready to add some RJ magic?</small>\r\n        </div>\r\n        <button id=\"enable-rj-mode\" style=\"\r\n          background: linear-gradient(45deg, #4CAF50, #45a049);\r\n          color: white;\r\n          border: none;\r\n          padding: 8px 16px;\r\n          border-radius: 20px;\r\n          cursor: pointer;\r\n          font-weight: bold;\r\n          margin-left: auto;\r\n        \">Enable RJ Mode</button>\r\n        <button id=\"dismiss-rj-prompt\" style=\"\r\n          background: transparent;\r\n          color: #666;\r\n          border: none;\r\n          cursor: pointer;\r\n          font-size: 18px;\r\n          padding: 5px;\r\n        \">√ó</button>\r\n      </div>\r\n    `;\r\n\r\n  notification.style.cssText = `\r\n      position: fixed;\r\n      top: 80px;\r\n      right: 20px;\r\n      z-index: 10000;\r\n      background: rgba(255, 255, 255, 0.95);\r\n      backdrop-filter: blur(10px);\r\n      color: #333;\r\n      padding: 15px 20px;\r\n      border-radius: 12px;\r\n      box-shadow: 0 8px 32px rgba(0,0,0,0.1);\r\n      border: 1px solid rgba(255,255,255,0.2);\r\n      max-width: 350px;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n      animation: slideInRight 0.3s ease-out;\r\n    `;\r\n\r\n  // Add CSS animation\r\n  if (!document.getElementById(\"rj-mode-styles\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"rj-mode-styles\";\r\n    style.textContent = `\r\n        @keyframes slideInRight {\r\n          from { transform: translateX(100%); opacity: 0; }\r\n          to { transform: translateX(0); opacity: 1; }\r\n        }\r\n        @keyframes slideOutRight {\r\n          from { transform: translateX(0); opacity: 1; }\r\n          to { transform: translateX(100%); opacity: 0; }\r\n        }\r\n      `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  document.body.appendChild(notification);\r\n\r\n  // Event listeners for the notification\r\n  document.getElementById(\"enable-rj-mode\")?.addEventListener(\"click\", () => {\r\n    dismissNotification();\r\n    toggleRJMode();\r\n  });\r\n\r\n  document\r\n    .getElementById(\"dismiss-rj-prompt\")\r\n    ?.addEventListener(\"click\", () => {\r\n      dismissNotification();\r\n    });\r\n\r\n  // Auto-dismiss after 10 seconds\r\n  setTimeout(() => {\r\n    dismissNotification();\r\n  }, 10000);\r\n};\r\n\r\nconst DomUtils = {\r\n  showErrorMessage,\r\n  showRJModePrompt,\r\n  createRJModeButton,\r\n  dismissNotification,\r\n  showLoadingIndicator,\r\n  hideLoadingIndicator,\r\n};\r\n\r\n(window as any).DomUtils = DomUtils;\r\nexport default DomUtils;\r\n",
    "// YouTube-specific utility functions\r\nconst YouTubeUtils = {\r\n  extractVideoId() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const videoId = urlParams.get(\"v\");\r\n    return videoId || null;\r\n  },\r\n\r\n  getCurrentVideoTitle() {\r\n    const titleElement = document.querySelector(\r\n      \"h1.title.style-scope.ytd-video-primary-info-renderer\"\r\n    );\r\n    return titleElement?.textContent?.trim() || \"\";\r\n  },\r\n\r\n  getDescription() {\r\n    return (\r\n      document?.querySelector(\"#description-inner\")?.textContent?.trim() || \"\"\r\n    );\r\n  },\r\n\r\n  getComments() {\r\n    let allComments: string[] = [];\r\n    document.querySelectorAll(\"#comment-container\").forEach((item) => {\r\n      let txt = item.querySelector(\"#expander\")?.textContent?.trim() || \"\";\r\n      allComments.push(txt);\r\n    });\r\n    return allComments;\r\n  },\r\n\r\n  getNextVideoTitle() {\r\n    const playlistItem = document.querySelector(\"#playlist-items[selected]\");\r\n    const nextVideoElement = (\r\n      playlistItem?.nextSibling as Element\r\n    )?.querySelector(\"#video-title\");\r\n\r\n    return nextVideoElement?.textContent?.trim() || \"\";\r\n  },\r\n\r\n  isPlaylistPage() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.has(\"list\");\r\n  },\r\n\r\n  getPlaylistId() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.get(\"list\");\r\n  },\r\n\r\n  getVideoElement() {\r\n    return document.querySelector(\"video\");\r\n  },\r\n\r\n  // Clean up YouTube video titles (remove common suffixes)\r\n  cleanVideoTitle(title: string) {\r\n    return title\r\n      .replace(/\\(Official.*?\\)/gi, \"\")\r\n      .replace(/\\(Music Video\\)/gi, \"\")\r\n      .replace(/\\[Official.*?\\]/gi, \"\")\r\n      .replace(/- Topic$/, \"\")\r\n      .trim();\r\n  },\r\n\r\n  // Get video duration\r\n  getVideoDuration() {\r\n    const video = this.getVideoElement();\r\n    return video ? video.duration : 0;\r\n  },\r\n\r\n  // Check if video is playing\r\n  isVideoPlaying() {\r\n    const video = this.getVideoElement();\r\n    return video ? !video.paused && !video.ended : false;\r\n  },\r\n};\r\n\r\n// Make it globally available\r\n(window as any).YouTubeUtils = YouTubeUtils;\r\nexport default YouTubeUtils;\r\n",
    "\"use strict\";\r\n\r\nconst CHROMIUM_FULL_VERSION = \"130.0.2849.68\";\r\nconst CHROMIUM_MAJOR_VERSION = CHROMIUM_FULL_VERSION.split(\".\", 1)[0];\r\nconst SEC_MS_GEC_VERSION = `1-${CHROMIUM_FULL_VERSION}`;\r\n\r\nconst Constants = {\r\n  TRUSTED_CLIENT_TOKEN: \"6A5AA1D4EAFF4E9FB37E23D68491D6F4\",\r\n  WSS_URL:\r\n    \"wss://speech.platform.bing.com/consumer/speech/synthesize/readaloud/edge/v1\",\r\n  VOICES_URL:\r\n    \"https://speech.platform.bing.com/consumer/speech/synthesize/readaloud/voices/list\",\r\n};\r\n\r\n// * Custom error for skew adjustment failures\r\nexport class SkewAdjustmentError extends Error {\r\n  constructor(message: string, options: ErrorOptions = {}) {\r\n    super(message);\r\n    this.name = \"SkewAdjustmentError\";\r\n    if (options?.cause) {\r\n      this.cause = options.cause;\r\n    }\r\n  }\r\n}\r\n\r\nconst WIN_EPOCH = 11644473600; // seconds between 1601-01-01 and 1970-01-01\r\nconst S_TO_NS = 1e9;\r\n\r\n//  * Class to handle DRM operations with clock skew correction.\r\nexport class DRM {\r\n  static clock_skew_seconds = 0.0;\r\n\r\n  //  * Adjust the clock skew in seconds in case the system clock is off.\r\n  static adj_clock_skew_seconds(skew_seconds: number) {\r\n    DRM.clock_skew_seconds += skew_seconds;\r\n  }\r\n\r\n  //  * Gets the current timestamp in seconds (Unix time) with clock skew correction.\r\n  static get_unix_timestamp(): number {\r\n    return Date.now() / 1000 + DRM.clock_skew_seconds;\r\n  }\r\n\r\n  //  * Parses an RFC 2616 date string into a Unix timestamp.\r\n  //  * Example: \"Sun, 06 Nov 1994 08:49:37 GMT\"\r\n  static parse_rfc2616_date(date: string): number | null {\r\n    try {\r\n      const parsed = new Date(date);\r\n      if (isNaN(parsed.getTime())) {\r\n        return null;\r\n      }\r\n      return parsed.getTime() / 1000;\r\n    } catch (err) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //  * Adjusts skew based on the server \"Date\" header.\r\n  static handle_client_response_error(e: { headers: Record<string, string> }) {\r\n    if (!e.headers) {\r\n      throw new SkewAdjustmentError(\"No server date in headers.\", { cause: e });\r\n    }\r\n    const server_date = e.headers[\"date\"];\r\n    if (!server_date || typeof server_date !== \"string\") {\r\n      throw new SkewAdjustmentError(\"No server date in headers.\", { cause: e });\r\n    }\r\n    const server_date_parsed = DRM.parse_rfc2616_date(server_date);\r\n    if (server_date_parsed === null) {\r\n      throw new SkewAdjustmentError(\r\n        `Failed to parse server date: ${server_date}`,\r\n        {\r\n          cause: e,\r\n        }\r\n      );\r\n    }\r\n    const client_date = DRM.get_unix_timestamp();\r\n    DRM.adj_clock_skew_seconds(server_date_parsed - client_date);\r\n  }\r\n\r\n  // * Generates the Sec-MS-GEC token value.\r\n  static async generate_sec_ms_gec() {\r\n    // Get current timestamp with skew\r\n    let ticks = DRM.get_unix_timestamp();\r\n\r\n    // Switch to Windows epoch\r\n    ticks += WIN_EPOCH;\r\n\r\n    // Round down to nearest 5 minutes (300 seconds)\r\n    ticks -= ticks % 300;\r\n\r\n    // Convert to 100-nanosecond intervals\r\n    ticks *= S_TO_NS / 100;\r\n\r\n    // Concatenate ticks and trusted token\r\n    const str_to_hash = `${Math.floor(ticks)}${Constants.TRUSTED_CLIENT_TOKEN}`;\r\n\r\n    // Encode as UTF-8\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(str_to_hash);\r\n\r\n    // SHA-256 hash\r\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\r\n\r\n    // Convert ArrayBuffer ‚Üí hex string\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray\r\n      .map((b) => b.toString(16).padStart(2, \"0\"))\r\n      .join(\"\");\r\n\r\n    return hashHex.toUpperCase();\r\n  }\r\n}\r\n\r\nexport interface Voice {\r\n  Name: string;\r\n  ShortName: string;\r\n  Gender: string;\r\n  Locale: string;\r\n  VoiceType?: string;\r\n}\r\n\r\nexport interface EdgeTTSOptions {\r\n  pitch?: string | number;\r\n  rate?: string | number;\r\n  volume?: string | number;\r\n}\r\n\r\nexport class EdgeTTS {\r\n  audio_stream: Uint8Array[] & BlobPart[] = [];\r\n  audio_format: string = \"mp3\";\r\n  ws: WebSocket | null = null;\r\n\r\n  async getVoices(): Promise<Voice[]> {\r\n    const response = await fetch(\r\n      `${Constants.VOICES_URL}?trustedclienttoken=${Constants.TRUSTED_CLIENT_TOKEN}`\r\n    );\r\n    const data: Voice[] = await response.json();\r\n    return data.map((voice) => {\r\n      const { Name, ShortName, Gender, Locale, VoiceType } = voice;\r\n      return { Name, ShortName, Gender, Locale, VoiceType };\r\n    });\r\n  }\r\n\r\n  async getVoicesByLanguage(locale: string): Promise<Voice[]> {\r\n    const voices = await this.getVoices();\r\n    return voices.filter((voice) => voice.Locale.startsWith(locale));\r\n  }\r\n\r\n  async getVoicesByGender(gender: string): Promise<Voice[]> {\r\n    const voices = await this.getVoices();\r\n    return voices.filter((voice) => voice.Gender === gender);\r\n  }\r\n\r\n  generateUUID(): string {\r\n    return \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\r\n      const r = (Math.random() * 16) | 0;\r\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n      return v.toString(16);\r\n    });\r\n  }\r\n\r\n  validatePitch(pitch: string | number): string {\r\n    if (typeof pitch === \"number\") {\r\n      return pitch >= 0 ? `+${pitch}Hz` : `${pitch}Hz`;\r\n    }\r\n    if (!/^[+-]?\\d{1,3}(?:\\.\\d+)?Hz$/.test(pitch)) {\r\n      throw new Error(\r\n        \"Invalid pitch format. Expected '-100Hz to +100Hz' or a number.\"\r\n      );\r\n    }\r\n    return pitch;\r\n  }\r\n\r\n  validateRate(rate: string | number): string {\r\n    let rateValue: number;\r\n    if (typeof rate === \"string\") {\r\n      rateValue = parseFloat(rate.replace(\"%\", \"\"));\r\n      if (isNaN(rateValue)) throw new Error(\"Invalid rate format.\");\r\n    } else {\r\n      rateValue = rate;\r\n    }\r\n    return rateValue >= 0 ? `+${rateValue}%` : `${rateValue}%`;\r\n  }\r\n\r\n  validateVolume(volume: string | number): string {\r\n    let volumeValue: number;\r\n    if (typeof volume === \"string\") {\r\n      volumeValue = parseInt(volume.replace(\"%\", \"\"), 10);\r\n      if (isNaN(volumeValue)) throw new Error(\"Invalid volume format.\");\r\n    } else {\r\n      volumeValue = volume;\r\n    }\r\n    if (volumeValue < -100 || volumeValue > 100) {\r\n      throw new Error(\"Volume out of range (-100% to 100%).\");\r\n    }\r\n    return `${volumeValue}%`;\r\n  }\r\n\r\n  async synthesize(\r\n    text: string,\r\n    voice: string = \"en-US-AnaNeural\",\r\n    options: EdgeTTSOptions = {}\r\n  ): Promise<void> {\r\n    const drmSecMS = await DRM.generate_sec_ms_gec();\r\n    return new Promise((resolve, reject) => {\r\n      this.audio_stream = [];\r\n      const req_id = this.generateUUID();\r\n      this.ws = new WebSocket(\r\n        `${Constants.WSS_URL}?trustedclienttoken=${Constants.TRUSTED_CLIENT_TOKEN}&ConnectionId=${req_id}&Sec-MS-GEC=${drmSecMS}&Sec-MS-GEC-Version=${SEC_MS_GEC_VERSION}`\r\n      );\r\n      this.ws.binaryType = \"arraybuffer\";\r\n\r\n      const SSML_text = this.getSSML(text, voice, options);\r\n      const timeout = setTimeout(() => {\r\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n          this.ws.close();\r\n        }\r\n        reject(new Error(\"Synthesis timeout\"));\r\n      }, 30000);\r\n\r\n      this.ws.addEventListener(\"open\", () => {\r\n        this.ws?.send(this.buildTTSConfigMessage());\r\n        const speechMessage =\r\n          `X-RequestId:${req_id}\\r\\nContent-Type:application/ssml+xml\\r\\n` +\r\n          `X-Timestamp:${new Date().toISOString()}Z\\r\\nPath:ssml\\r\\n\\r\\n${SSML_text}`;\r\n        this.ws?.send(speechMessage);\r\n      });\r\n\r\n      this.ws.addEventListener(\"message\", (event: MessageEvent) => {\r\n        this.processAudioData(event.data);\r\n      });\r\n\r\n      this.ws.addEventListener(\"error\", (err) => {\r\n        clearTimeout(timeout);\r\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n          this.ws.close();\r\n        }\r\n        reject(err);\r\n      });\r\n\r\n      this.ws.addEventListener(\"close\", () => {\r\n        clearTimeout(timeout);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  getSSML(text: string, voice: string, options: EdgeTTSOptions = {}): string {\r\n    if (typeof options.pitch === \"string\") {\r\n      options.pitch = options.pitch.replace(\"hz\", \"Hz\");\r\n    }\r\n    const pitch = this.validatePitch(options.pitch ?? 0);\r\n    const rate = this.validateRate(options.rate ?? 0);\r\n    const volume = this.validateVolume(options.volume ?? 0);\r\n    return `<speak version='1.0' xml:lang='en-US'><voice name='${voice}'><prosody pitch='${pitch}' rate='${rate}' volume='${volume}'>${text}</prosody></voice></speak>`;\r\n  }\r\n\r\n  buildTTSConfigMessage(): string {\r\n    return (\r\n      `X-Timestamp:${new Date().toISOString()}Z\\r\\nContent-Type:application/json; charset=utf-8\\r\\nPath:speech.config\\r\\n\\r\\n` +\r\n      `{\"context\":{\"synthesis\":{\"audio\":{\"metadataoptions\":{\"sentenceBoundaryEnabled\":false,\"wordBoundaryEnabled\":true},\"outputFormat\":\"audio-24khz-48kbitrate-mono-mp3\"}}}}`\r\n    );\r\n  }\r\n\r\n  processAudioData(data: ArrayBuffer | string): void {\r\n    if (typeof data === \"string\") {\r\n      if (data.includes(\"Path:turn.end\")) {\r\n        this.ws?.close();\r\n      }\r\n      return;\r\n    }\r\n\r\n    const buffer = new Uint8Array(data);\r\n    const needle = new TextEncoder().encode(\"Path:audio\\r\\n\");\r\n    const idx = this.indexOfSubarray(buffer, needle);\r\n    if (idx !== -1) {\r\n      const audioChunk = buffer.subarray(idx + needle.length);\r\n      this.audio_stream.push(audioChunk);\r\n    }\r\n    if (new TextDecoder().decode(buffer).includes(\"Path:turn.end\")) {\r\n      this.ws?.close();\r\n    }\r\n  }\r\n\r\n  indexOfSubarray(haystack: Uint8Array, needle: Uint8Array): number {\r\n    for (let i = 0; i <= haystack.length - needle.length; i++) {\r\n      let match = true;\r\n      for (let j = 0; j < needle.length; j++) {\r\n        if (haystack[i + j] !== needle[j]) {\r\n          match = false;\r\n          break;\r\n        }\r\n      }\r\n      if (match) return i;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  toBlob(format: string = this.audio_format): Blob {\r\n    if (this.audio_stream.length === 0) {\r\n      throw new Error(\r\n        \"No audio data available. Did you run synthesize() first?\"\r\n      );\r\n    }\r\n    return new Blob(this.audio_stream, { type: `audio/${format}` });\r\n  }\r\n\r\n  async toBase64(): Promise<string> {\r\n    const blob = this.toBlob();\r\n    return new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => resolve((reader.result as string).split(\",\")[1]);\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  }\r\n\r\n  download(filename: string = \"output.mp3\"): void {\r\n    const blob = this.toBlob();\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = filename;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n}\r\n\r\n// (window as unknown as { EdgeTTS: typeof EdgeTTS }).EdgeTTS = EdgeTTS;\r\n",
    "import APIUtils from \"./utils/api-utils\";\r\nimport AudioUtils from \"./utils/audio-utils\";\r\nimport DomUtils from \"./utils/dom-utils\";\r\nimport YouTubeUtils from \"./utils/youtube-utils\";\r\nimport { EdgeTTS } from \"./utils/edge-tts-web\";\r\n\r\nclass YouTubeRJMode {\r\n  isRJModeActive: boolean;\r\n  currentVideoTitle: string;\r\n  nextVideoTitle: string;\r\n  originalVolume: number;\r\n  isRJPlaying: boolean;\r\n  audioContext: AudioContext | null;\r\n  gainNode: GainNode | null;\r\n  lastProcessedVideo: string;\r\n  isGeneratingCommentary: boolean;\r\n  videoChangeTimeout: any;\r\n  progressInterval: any;\r\n  scriptHistory: any[];\r\n  edgeTTS: EdgeTTS;\r\n  ttsVoice: string;\r\n  generatedAudioData: any;\r\n\r\n  constructor() {\r\n    this.isRJModeActive = false;\r\n    this.currentVideoTitle = \"\";\r\n    this.nextVideoTitle = \"\";\r\n    this.originalVolume = 1.0;\r\n    this.isRJPlaying = false;\r\n    this.audioContext = null;\r\n    this.gainNode = null;\r\n    this.lastProcessedVideo = \"\";\r\n    this.isGeneratingCommentary = false;\r\n    this.videoChangeTimeout = null;\r\n    this.progressInterval = null;\r\n    this.scriptHistory = [];\r\n    this.edgeTTS = new EdgeTTS(); // Initialize Edge TTS instance\r\n    this.ttsVoice = \"en-US-AvaMultilingualNeural\"; // \"en-US-AriaNeural\"; // Default TTS voice\r\n    this.generatedAudioData = null; // Store generated audio data\r\n\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    await this.promptUserForAPIKeys();\r\n    this.setupAudioContext();\r\n    this.detectPlaylist();\r\n    // this.setupVideoEventListeners();\r\n    DomUtils.createRJModeButton(this.toggleRJMode.bind(this));\r\n  }\r\n\r\n  async promptUserForAPIKeys() {\r\n    let settings = await APIUtils.getAPISettings();\r\n    if (!settings.geminiApiKey) {\r\n      let geminiApiKey = prompt(\"Enter your Gemini API Key:\");\r\n      if (geminiApiKey) {\r\n        chrome.storage.sync.set({ geminiApiKey });\r\n      } else {\r\n        alert(\"Get free API key from https://aistudio.google.com/apikey\");\r\n      }\r\n    }\r\n  }\r\n\r\n  setupAudioContext() {\r\n    this.audioContext = AudioUtils.createAudioContext();\r\n    if (this.audioContext) {\r\n      this.gainNode = this.audioContext.createGain();\r\n    }\r\n  }\r\n\r\n  detectPlaylist() {\r\n    // Use YouTube utility function\r\n    if (\r\n      YouTubeUtils.isPlaylistPage() &&\r\n      !document.getElementById(\"rj-mode-button\")\r\n    ) {\r\n      DomUtils.showRJModePrompt(this.toggleRJMode.bind(this));\r\n    }\r\n  }\r\n\r\n  getCurrentAndNextTitles() {\r\n    // Use YouTube utility functions\r\n    this.currentVideoTitle = YouTubeUtils.cleanVideoTitle(\r\n      YouTubeUtils.getCurrentVideoTitle()\r\n    );\r\n    this.nextVideoTitle = YouTubeUtils.cleanVideoTitle(\r\n      YouTubeUtils.getNextVideoTitle()\r\n    );\r\n  }\r\n\r\n  async generateRJCommentary() {\r\n    // Prevent multiple simultaneous commentary generations\r\n    if (this.isGeneratingCommentary || this.isRJPlaying) {\r\n      console.log(\"Commentary already in progress, skipping...\");\r\n      return;\r\n    }\r\n\r\n    // Check if we've already processed this video\r\n    const videoId = YouTubeUtils.extractVideoId() || this.currentVideoTitle;\r\n    if (videoId === this.lastProcessedVideo) {\r\n      console.log(\"Already processed this video, skipping...\");\r\n      return;\r\n    }\r\n\r\n    if (!this.currentVideoTitle || this.currentVideoTitle.trim() === \"\") {\r\n      console.log(\"No current video title found, skipping...\");\r\n      return;\r\n    }\r\n\r\n    this.isGeneratingCommentary = true;\r\n    this.lastProcessedVideo = videoId;\r\n\r\n    try {\r\n      DomUtils.showLoadingIndicator();\r\n\r\n      const currentSonglyrics = await APIUtils.callLyricsAPI(\r\n        this.currentVideoTitle\r\n      );\r\n\r\n      // Use API utility functions\r\n      const settings = await APIUtils.getAPISettings();\r\n      const prompt = APIUtils.generateRJPrompt(\r\n        this.currentVideoTitle,\r\n        this.nextVideoTitle,\r\n        settings.rjStyle,\r\n        settings.commentaryLength,\r\n        settings.includeHistory ? this.scriptHistory.join(\"\\n\") : \"\",\r\n        settings.includeComments ? YouTubeUtils.getComments().join(\"\\n\") : \"\",\r\n        currentSonglyrics,\r\n        settings.hostName,\r\n        settings.radioStation\r\n      );\r\n\r\n      console.log(\"Generated prompt:\", prompt);\r\n\r\n      const script = await APIUtils.callGeminiAPI(\r\n        prompt,\r\n        settings.geminiApiKey\r\n      );\r\n\r\n      console.log(\"Generated script:\", script);\r\n\r\n      this.scriptHistory.push(script);\r\n\r\n      let audioData = {};\r\n      if (settings.murfApiKey) {\r\n        // Use Murf API if available\r\n        // audioData contains the audio blob and other metadata\r\n        audioData = await APIUtils.callMurfAPI(\r\n          script,\r\n          settings.murfApiKey,\r\n          settings.voiceId,\r\n          settings.voiceStyle\r\n        );\r\n      } else {\r\n        // If Murf API is not available or we want to fallback to Edge TTS\r\n        await this.edgeTTS.synthesize(\r\n          script,\r\n          settings.voiceId || this.ttsVoice\r\n        );\r\n        audioData = {\r\n          audioBlob: this.edgeTTS.toBlob(),\r\n          // audioUrl: URL.createObjectURL(this.edgeTTS.toBlob()),\r\n        };\r\n      }\r\n\r\n      // Log the commentary\r\n      APIUtils.logCommentary(\r\n        this.currentVideoTitle,\r\n        this.nextVideoTitle,\r\n        script\r\n      );\r\n\r\n      this.generatedAudioData = audioData; // Store generated audio data for later use\r\n\r\n      DomUtils.hideLoadingIndicator();\r\n    } catch (error: any) {\r\n      console.error(\"RJ Commentary generation failed:\", error);\r\n      DomUtils.hideLoadingIndicator();\r\n      DomUtils.showErrorMessage(error.message);\r\n    } finally {\r\n      this.isGeneratingCommentary = false;\r\n    }\r\n  }\r\n\r\n  async playRJCommentary() {\r\n    const audioBlob = this.generatedAudioData?.audioBlob;\r\n\r\n    if (!audioBlob) {\r\n      console.error(\"No audio data available to play.\");\r\n      return;\r\n    }\r\n\r\n    if (this.isRJPlaying) {\r\n      console.log(\"RJ already playing, skipping...\");\r\n      return;\r\n    }\r\n\r\n    this.isRJPlaying = true;\r\n\r\n    const video = YouTubeUtils.getVideoElement();\r\n    try {\r\n      if (!video) {\r\n        console.error(\"No video element found on the page.\");\r\n        this.isRJPlaying = false;\r\n        return;\r\n      }\r\n\r\n      // Duck the YouTube video volume using utility\r\n      this.originalVolume = await AudioUtils.duckVolume(video, 0.1);\r\n\r\n      // Create and play RJ audio using utility\r\n      const { audio, audioUrl } = AudioUtils.createAudio(audioBlob);\r\n\r\n      audio.addEventListener(\"ended\", () => {\r\n        this.restoreVolumeAndCleanup(video, audioUrl);\r\n      });\r\n\r\n      audio.addEventListener(\"error\", (error) => {\r\n        console.error(\"Audio error:\", error);\r\n        this.restoreVolumeAndCleanup(video, audioUrl);\r\n      });\r\n\r\n      // Play audio\r\n      await AudioUtils.playAudio(audio).catch((error) => {\r\n        console.error(\"Audio playback failed:\", error);\r\n        this.restoreVolumeAndCleanup(video, audioUrl);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error playing RJ commentary:\", error);\r\n      this.isRJPlaying = false;\r\n\r\n      // Restore original volume\r\n      if (video) {\r\n        await AudioUtils.restoreVolume(video, this.originalVolume);\r\n      }\r\n    } finally {\r\n      this.generatedAudioData = null; // Clear audio data after playback\r\n    }\r\n  }\r\n\r\n  async restoreVolumeAndCleanup(video: HTMLVideoElement, audioUrl: string) {\r\n    // Restore original volume using utility\r\n    await AudioUtils.restoreVolume(video, this.originalVolume);\r\n\r\n    // Clean up audio URL\r\n    if (audioUrl) {\r\n      URL.revokeObjectURL(audioUrl);\r\n    }\r\n\r\n    this.isRJPlaying = false;\r\n    console.log(\"RJ commentary cleanup completed\");\r\n  }\r\n\r\n  async toggleRJMode() {\r\n    this.isRJModeActive = !this.isRJModeActive;\r\n    const button = document.getElementById(\"rj-mode-button\");\r\n    if (!button) {\r\n      console.error(\"RJ Mode button not found.\");\r\n      return;\r\n    }\r\n\r\n    if (this.isRJModeActive) {\r\n      button.innerHTML = \"üéôÔ∏è Stop RJ Mode\";\r\n      button.style.background = \"linear-gradient(45deg, #ff4757, #ff6b6b)\";\r\n      await this.startRJMode();\r\n    } else {\r\n      button.innerHTML = \"üéôÔ∏è Start RJ Mode\";\r\n      button.style.background = \"linear-gradient(45deg, #ff6b6b, #4ecdc4)\";\r\n      this.stopRJMode();\r\n    }\r\n  }\r\n\r\n  async startRJMode() {\r\n    this.getCurrentAndNextTitles();\r\n    this.setupVideoEventListeners();\r\n  }\r\n\r\n  stopRJMode() {\r\n    this.isRJModeActive = false;\r\n    this.isRJPlaying = false;\r\n    this.isGeneratingCommentary = false;\r\n    this.lastProcessedVideo = \"\";\r\n\r\n    // Clear any pending timeouts and intervals\r\n    if (this.videoChangeTimeout) {\r\n      clearTimeout(this.videoChangeTimeout);\r\n      this.videoChangeTimeout = null;\r\n    }\r\n\r\n    clearInterval(this.progressInterval);\r\n\r\n    // Clean up any loading indicators\r\n    DomUtils.hideLoadingIndicator();\r\n\r\n    console.log(\"RJ Mode stopped and cleaned up\");\r\n  }\r\n\r\n  setupVideoEventListeners() {\r\n    // Progress check interval\r\n\r\n    // Monitor video progress\r\n    const checkVideoProgress = () => {\r\n      console.log(\"checkVideoProgress called\");\r\n      const video = document.querySelector(\"video\");\r\n      if (!video || !this.isRJModeActive) return;\r\n\r\n      const timeRemaining = video.duration - video.currentTime;\r\n\r\n      // generate commentary and keep it ready 10 seconds afer video starts\r\n      if (\r\n        video.currentTime > 10 &&\r\n        !this.isGeneratingCommentary &&\r\n        !this.generatedAudioData\r\n      ) {\r\n        this.getCurrentAndNextTitles();\r\n        this.generateRJCommentary();\r\n      }\r\n\r\n      // Start commentary when 30 seconds remain and not already playing\r\n      if (\r\n        timeRemaining <= 30 &&\r\n        !this.isRJPlaying &&\r\n        !this.isGeneratingCommentary\r\n      ) {\r\n        this.playRJCommentary();\r\n      }\r\n    };\r\n\r\n    // Set up video progress monitoring\r\n    const setupProgressMonitoring = () => {\r\n      if (this.progressInterval) {\r\n        clearInterval(this.progressInterval);\r\n      }\r\n      this.progressInterval = setInterval(checkVideoProgress, 1000);\r\n    };\r\n\r\n    // Clear progress monitoring\r\n\r\n    // Start monitoring when RJ mode is active\r\n    if (this.isRJModeActive) {\r\n      setupProgressMonitoring();\r\n    }\r\n  }\r\n}\r\n\r\n// Initialize when page loads\r\nif (document.readyState === \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    const youtubeRJ = new YouTubeRJMode();\r\n    (window as any).youtubeRJ = youtubeRJ;\r\n    console.log(youtubeRJ);\r\n  });\r\n} else {\r\n  const youtubeRJ = new YouTubeRJMode();\r\n  (window as any).youtubeRJ = youtubeRJ;\r\n  console.log(youtubeRJ);\r\n}\r\n"
  ],
  "mappings": "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",
  "debugId": "0622A85C29B33C1F64756E2164756E21",
  "names": []
}